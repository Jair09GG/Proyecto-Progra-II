
// Proyecto 1 //
// Progra II //

using System;
using System.Collections.Generic;
using System.Linq;

namespace GestorTipoCambio
{
    class Program
    {
        static Dictionary<DateTime, decimal> tipoCambioHistorico = new Dictionary<DateTime, decimal>();
        static decimal tipoCambioActual = 0;

        static void Main(string[] args)
        {
            while (true)
            {
                Console.Clear();
                Console.WriteLine("Gestor de Tipo de Cambio");
                Console.WriteLine("1. Mostrar tipo de cambio de compra del día");
                Console.WriteLine("2. Ingresar tipo de cambio del día");
                Console.WriteLine("3. Actualizar tipo de cambio de uno de los últimos 7 días");
                Console.WriteLine("4. Mostrar tipo de cambio de los últimos 7 días");
                Console.WriteLine("5. Salir");
                Console.Write("Seleccione una opción: ");
                string opcion = Console.ReadLine();

                switch (opcion)
                {
                    case "1":
                        MostrarTipoCambioActual();
                        break;
                    case "2":
                        IngresarTipoCambioDelDia();
                        break;
                    case "3":
                        ActualizarTipoCambio();
                        break;
                    case "4":
                        MostrarTipoCambioHistorico();
                        break;
                    case "5":
                        return;
                    default:
                        Console.WriteLine("Opción no válida. Intente de nuevo.");
                        break;
                }
                Console.WriteLine("Presione cualquier tecla para continuar...");
                Console.ReadKey();
            }
        }

        static void MostrarTipoCambioActual()
        {
            if (tipoCambioActual > 0)
            {
                Console.WriteLine($"Tipo de cambio de compra del día: {tipoCambioActual}");
            }
            else
            {
                Console.WriteLine("No se ha ingresado un tipo de cambio para el día.");
            }
        }

        static void IngresarTipoCambioDelDia()
        {
            Console.Write("Ingrese el tipo de cambio de compra del día: ");
            if (decimal.TryParse(Console.ReadLine(), out decimal nuevoTipoCambio))
            {
                tipoCambioActual = nuevoTipoCambio;
                tipoCambioHistorico[DateTime.Today] = nuevoTipoCambio;
                Console.WriteLine("Tipo de cambio ingresado correctamente.");
            }
            else
            {
                Console.WriteLine("Valor no válido. Intente de nuevo.");
            }
        }

        static void ActualizarTipoCambio()
        {
            Console.Write("Ingrese la fecha (formato: dd/MM/yyyy) del tipo de cambio a actualizar: ");
            if (DateTime.TryParse(Console.ReadLine(), out DateTime fecha))
            {
                if (tipoCambioHistorico.ContainsKey(fecha))
                {
                    Console.Write("Ingrese el nuevo tipo de cambio: ");
                    if (decimal.TryParse(Console.ReadLine(), out decimal nuevoTipoCambio))
                    {
                        tipoCambioHistorico[fecha] = nuevoTipoCambio;
                        Console.WriteLine("Tipo de cambio actualizado correctamente.");
                    }
                    else
                    {
                        Console.WriteLine("Valor no válido. Intente de nuevo.");
                    }
                }
                else
                {
                    Console.WriteLine("No hay registro para esa fecha. Intente de nuevo.");
                }
            }
            else
            {
                Console.WriteLine("Fecha no válida. Intente de nuevo.");
            }
        }

        static void MostrarTipoCambioHistorico()
        {
            Console.WriteLine("Tipo de cambio de los últimos 7 días:");
            for (int i = 0; i < 7; i++)
            {
                DateTime fecha = DateTime.Today.AddDays(-i);
                if (tipoCambioHistorico.TryGetValue(fecha, out decimal tipoCambio))
                {
                    Console.WriteLine($"{fecha.ToShortDateString()}: {tipoCambio}");
                }
                else
                {
                    Console.WriteLine($"{fecha.ToShortDateString()}: NA");
                }
            }
        }
    }
} 

                        // Es para Ordenar un toque, es temporal :)...
**********************************************************************************

class Program
{
    static void Main()
    {
        List<(DateTime Fecha, double Valor)> registros = new List<(DateTime, double)>();

        Console.Write("¿Cada cuantos dias desea realizar el analisis? ");
        int intervalo = int.Parse(Console.ReadLine());

        for (int i = 0; i < 8; i++)
        {
            Console.Write($"Ingrese el tipo de cambio de compra para el dia {i + 1}: ");
            registros.Add((DateTime.Now.AddDays(i), double.Parse(Console.ReadLine())));
        }

        for (int i = 0; i < registros.Count; i += intervalo)
        {
            var periodo = registros.Skip(i).Take(intervalo).ToList();
            double promedio = periodo.Average(r => r.Valor);
            var min = periodo.MinBy(r => r.Valor);
            var max = periodo.MaxBy(r => r.Valor);

            Console.WriteLine($"\nAnalisis del periodo {i + 1} - {Math.Min(i + intervalo, registros.Count)}:");
            Console.WriteLine($"Promedio: {promedio:F2}");
            Console.WriteLine($"Minimo: {min.Valor:F2} en {min.Fecha.ToShortDateString()}");
            Console.WriteLine($"Maximo: {max.Valor:F2} en {max.Fecha.ToShortDateString()}");
        }
    }
}
